
Project_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000806  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  00000806  0000087a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000886  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  000008f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fab  00000000  00000000  000009ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000090d  00000000  00000000  00001957  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b85  00000000  00000000  00002264  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000178  00000000  00000000  00002dec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00004a5f  00000000  00000000  00002f64  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d58  00000000  00000000  000079c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  0000871b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00001583  00000000  00000000  000087a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	00 00       	nop
   4:	42 c0       	rjmp	.+132    	; 0x8a <__bad_interrupt>
   6:	00 00       	nop
   8:	40 c0       	rjmp	.+128    	; 0x8a <__bad_interrupt>
   a:	00 00       	nop
   c:	3e c0       	rjmp	.+124    	; 0x8a <__bad_interrupt>
   e:	00 00       	nop
  10:	3c c0       	rjmp	.+120    	; 0x8a <__bad_interrupt>
  12:	00 00       	nop
  14:	3a c0       	rjmp	.+116    	; 0x8a <__bad_interrupt>
  16:	00 00       	nop
  18:	38 c0       	rjmp	.+112    	; 0x8a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	36 c0       	rjmp	.+108    	; 0x8a <__bad_interrupt>
  1e:	00 00       	nop
  20:	34 c0       	rjmp	.+104    	; 0x8a <__bad_interrupt>
  22:	00 00       	nop
  24:	32 c0       	rjmp	.+100    	; 0x8a <__bad_interrupt>
  26:	00 00       	nop
  28:	30 c0       	rjmp	.+96     	; 0x8a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	2e c0       	rjmp	.+92     	; 0x8a <__bad_interrupt>
  2e:	00 00       	nop
  30:	2c c0       	rjmp	.+88     	; 0x8a <__bad_interrupt>
  32:	00 00       	nop
  34:	2a c0       	rjmp	.+84     	; 0x8a <__bad_interrupt>
  36:	00 00       	nop
  38:	28 c0       	rjmp	.+80     	; 0x8a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	26 c0       	rjmp	.+76     	; 0x8a <__bad_interrupt>
  3e:	00 00       	nop
  40:	24 c0       	rjmp	.+72     	; 0x8a <__bad_interrupt>
  42:	00 00       	nop
  44:	22 c0       	rjmp	.+68     	; 0x8a <__bad_interrupt>
  46:	00 00       	nop
  48:	20 c0       	rjmp	.+64     	; 0x8a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	1e c0       	rjmp	.+60     	; 0x8a <__bad_interrupt>
  4e:	00 00       	nop
  50:	1c c0       	rjmp	.+56     	; 0x8a <__bad_interrupt>
	...

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e0       	ldi	r30, 0x06	; 6
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ac e6       	ldi	r26, 0x6C	; 108
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 36       	cpi	r26, 0x6C	; 108
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	02 d0       	rcall	.+4      	; 0x8c <main>
  88:	bc c3       	rjmp	.+1912   	; 0x802 <_exit>

0000008a <__bad_interrupt>:
  8a:	ba cf       	rjmp	.-140    	; 0x0 <__vectors>

0000008c <main>:


int main(void)
{
	
	Stepper_Init();
  8c:	1a d0       	rcall	.+52     	; 0xc2 <Stepper_Init>
	
	while(1)
	{
		Stepper_Rotate(10,2);
  8e:	62 e0       	ldi	r22, 0x02	; 2
  90:	70 e0       	ldi	r23, 0x00	; 0
  92:	8a e0       	ldi	r24, 0x0A	; 10
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	35 d0       	rcall	.+106    	; 0x102 <Stepper_Rotate>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  98:	2f ef       	ldi	r18, 0xFF	; 255
  9a:	87 ea       	ldi	r24, 0xA7	; 167
  9c:	91 e6       	ldi	r25, 0x61	; 97
  9e:	21 50       	subi	r18, 0x01	; 1
  a0:	80 40       	sbci	r24, 0x00	; 0
  a2:	90 40       	sbci	r25, 0x00	; 0
  a4:	e1 f7       	brne	.-8      	; 0x9e <main+0x12>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <main+0x1c>
  a8:	00 00       	nop
  aa:	f1 cf       	rjmp	.-30     	; 0x8e <main+0x2>

000000ac <delay_ms_variable>:
	0b0110
	};
	
void delay_ms_variable(uint16 ms)
{
    while (ms--)
  ac:	00 97       	sbiw	r24, 0x00	; 0
  ae:	41 f0       	breq	.+16     	; 0xc0 <delay_ms_variable+0x14>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b0:	e9 ef       	ldi	r30, 0xF9	; 249
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	31 97       	sbiw	r30, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <delay_ms_variable+0x8>
  b8:	00 c0       	rjmp	.+0      	; 0xba <delay_ms_variable+0xe>
  ba:	00 00       	nop
  bc:	01 97       	sbiw	r24, 0x01	; 1
  be:	c1 f7       	brne	.-16     	; 0xb0 <delay_ms_variable+0x4>
  c0:	08 95       	ret

000000c2 <Stepper_Init>:
        _delay_us(1000); // 1ms delay
}

void Stepper_Init(void)
{
  c2:	ef 92       	push	r14
  c4:	ff 92       	push	r15
  c6:	0f 93       	push	r16
  c8:	1f 93       	push	r17
  ca:	cf 93       	push	r28
  cc:	df 93       	push	r29
  ce:	c8 e6       	ldi	r28, 0x68	; 104
  d0:	d0 e0       	ldi	r29, 0x00	; 0
  d2:	0f 2e       	mov	r0, r31
  d4:	fc e6       	ldi	r31, 0x6C	; 108
  d6:	ef 2e       	mov	r14, r31
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	ff 2e       	mov	r15, r31
  dc:	f0 2d       	mov	r31, r0
  de:	8e 01       	movw	r16, r28
	
	for(uint8 i = 0 ; i < 4 ; i++)
	{
		Set_Channel_Direction(coils[i],OUTPUT);
  e0:	61 e0       	ldi	r22, 0x01	; 1
  e2:	89 91       	ld	r24, Y+
  e4:	50 d0       	rcall	.+160    	; 0x186 <Set_Channel_Direction>
		Write_Channel(coils[i],HIGH); //LOW:Stall,HIGH:Loose (because common wire is connected to  ground)
  e6:	61 e0       	ldi	r22, 0x01	; 1
  e8:	f8 01       	movw	r30, r16
  ea:	80 81       	ld	r24, Z
  ec:	3b d1       	rcall	.+630    	; 0x364 <Write_Channel>
}

void Stepper_Init(void)
{
	
	for(uint8 i = 0 ; i < 4 ; i++)
  ee:	ce 15       	cp	r28, r14
  f0:	df 05       	cpc	r29, r15
  f2:	a9 f7       	brne	.-22     	; 0xde <Stepper_Init+0x1c>
	{
		Set_Channel_Direction(coils[i],OUTPUT);
		Write_Channel(coils[i],HIGH); //LOW:Stall,HIGH:Loose (because common wire is connected to  ground)
	}
			
}
  f4:	df 91       	pop	r29
  f6:	cf 91       	pop	r28
  f8:	1f 91       	pop	r17
  fa:	0f 91       	pop	r16
  fc:	ff 90       	pop	r15
  fe:	ef 90       	pop	r14
 100:	08 95       	ret

00000102 <Stepper_Rotate>:

void Stepper_Rotate(sint16 angle,uint16 speed)
{
 102:	cf 92       	push	r12
 104:	df 92       	push	r13
 106:	ef 92       	push	r14
 108:	ff 92       	push	r15
 10a:	0f 93       	push	r16
 10c:	1f 93       	push	r17
 10e:	cf 93       	push	r28
 110:	df 93       	push	r29
 112:	ec 01       	movw	r28, r24
	 sint16 steps, step_sequence_size ; 
	 uint8 * step_sequence;
	 uint8 step_index = 0;
	 uint16 speed_delay = 1000.0 / (1.0 * speed);
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	83 d2       	rcall	.+1286   	; 0x620 <__floatunsisf>
 11a:	9b 01       	movw	r18, r22
 11c:	ac 01       	movw	r20, r24
 11e:	60 e0       	ldi	r22, 0x00	; 0
 120:	70 e0       	ldi	r23, 0x00	; 0
 122:	8a e7       	ldi	r24, 0x7A	; 122
 124:	94 e4       	ldi	r25, 0x44	; 68
 126:	e3 d1       	rcall	.+966    	; 0x4ee <__divsf3>
 128:	4f d2       	rcall	.+1182   	; 0x5c8 <__fixunssfsi>
 12a:	6b 01       	movw	r12, r22
	 step_sequence = half_step_sequence;
	 steps = angle * (64.0 / 360.0);
	 
	 #endif
	 
	 for (uint16 i = 0; i < steps; i++)
 12c:	be 01       	movw	r22, r28
 12e:	dd 0f       	add	r29, r29
 130:	88 0b       	sbc	r24, r24
 132:	99 0b       	sbc	r25, r25
 134:	77 d2       	rcall	.+1262   	; 0x624 <__floatsisf>
 136:	21 e6       	ldi	r18, 0x61	; 97
 138:	3b e0       	ldi	r19, 0x0B	; 11
 13a:	46 e3       	ldi	r20, 0x36	; 54
 13c:	5e e3       	ldi	r21, 0x3E	; 62
 13e:	fe d2       	rcall	.+1532   	; 0x73c <__mulsf3>
 140:	3e d2       	rcall	.+1148   	; 0x5be <__fixsfsi>
 142:	7b 01       	movw	r14, r22
 144:	67 2b       	or	r22, r23
 146:	b1 f0       	breq	.+44     	; 0x174 <Stepper_Rotate+0x72>
 148:	00 e0       	ldi	r16, 0x00	; 0
 14a:	10 e0       	ldi	r17, 0x00	; 0
 14c:	c0 e0       	ldi	r28, 0x00	; 0
	 {
		step_index = step_index%step_sequence_size;
 14e:	d0 e0       	ldi	r29, 0x00	; 0
 150:	c7 70       	andi	r28, 0x07	; 7
 152:	d0 78       	andi	r29, 0x80	; 128
		 Write_Nibble(STEPPER_PORT, STEPPER_SIG, step_sequence[step_index]);
 154:	fe 01       	movw	r30, r28
 156:	ff 27       	eor	r31, r31
 158:	e0 5a       	subi	r30, 0xA0	; 160
 15a:	ff 4f       	sbci	r31, 0xFF	; 255
 15c:	40 81       	ld	r20, Z
 15e:	61 e0       	ldi	r22, 0x01	; 1
 160:	83 e0       	ldi	r24, 0x03	; 3
		 delay_ms_variable(speed_delay);  // Full delay to hold the coil activation
 162:	ae d1       	rcall	.+860    	; 0x4c0 <Write_Nibble>
 164:	c6 01       	movw	r24, r12
 166:	a2 df       	rcall	.-188    	; 0xac <delay_ms_variable>
		 step_index++;
 168:	cf 5f       	subi	r28, 0xFF	; 255
	 step_sequence = half_step_sequence;
	 steps = angle * (64.0 / 360.0);
	 
	 #endif
	 
	 for (uint16 i = 0; i < steps; i++)
 16a:	0f 5f       	subi	r16, 0xFF	; 255
 16c:	1f 4f       	sbci	r17, 0xFF	; 255
 16e:	0e 15       	cp	r16, r14
 170:	1f 05       	cpc	r17, r15
 172:	69 f7       	brne	.-38     	; 0x14e <Stepper_Rotate+0x4c>
		 Write_Nibble(STEPPER_PORT, STEPPER_SIG, step_sequence[step_index]);
		 delay_ms_variable(speed_delay);  // Full delay to hold the coil activation
		 step_index++;
	 }
	
}
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	1f 91       	pop	r17
 17a:	0f 91       	pop	r16
 17c:	ff 90       	pop	r15
 17e:	ef 90       	pop	r14
 180:	df 90       	pop	r13
 182:	cf 90       	pop	r12
 184:	08 95       	ret

00000186 <Set_Channel_Direction>:
	uint8 value = Read_Port(Port_ID);
	if(Significance == HIGH)	value =  (value & 0xF0) >> 4 ; 
	else if (Significance == LOW) value = (value &0x0F) ;
	
	return value ;
}
 186:	98 2f       	mov	r25, r24
 188:	97 70       	andi	r25, 0x07	; 7
 18a:	86 95       	lsr	r24
 18c:	86 95       	lsr	r24
 18e:	86 95       	lsr	r24
 190:	81 30       	cpi	r24, 0x01	; 1
 192:	09 f4       	brne	.+2      	; 0x196 <Set_Channel_Direction+0x10>
 194:	40 c0       	rjmp	.+128    	; 0x216 <Set_Channel_Direction+0x90>
 196:	38 f0       	brcs	.+14     	; 0x1a6 <Set_Channel_Direction+0x20>
 198:	82 30       	cpi	r24, 0x02	; 2
 19a:	09 f4       	brne	.+2      	; 0x19e <Set_Channel_Direction+0x18>
 19c:	74 c0       	rjmp	.+232    	; 0x286 <Set_Channel_Direction+0x100>
 19e:	83 30       	cpi	r24, 0x03	; 3
 1a0:	09 f4       	brne	.+2      	; 0x1a4 <Set_Channel_Direction+0x1e>
 1a2:	a9 c0       	rjmp	.+338    	; 0x2f6 <Set_Channel_Direction+0x170>
 1a4:	08 95       	ret
 1a6:	61 11       	cpse	r22, r1
 1a8:	12 c0       	rjmp	.+36     	; 0x1ce <Set_Channel_Direction+0x48>
 1aa:	4a b3       	in	r20, 0x1a	; 26
 1ac:	21 e0       	ldi	r18, 0x01	; 1
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	b9 01       	movw	r22, r18
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <Set_Channel_Direction+0x32>
 1b4:	66 0f       	add	r22, r22
 1b6:	77 1f       	adc	r23, r23
 1b8:	9a 95       	dec	r25
 1ba:	e2 f7       	brpl	.-8      	; 0x1b4 <Set_Channel_Direction+0x2e>
 1bc:	cb 01       	movw	r24, r22
 1be:	80 95       	com	r24
 1c0:	94 2f       	mov	r25, r20
 1c2:	98 23       	and	r25, r24
 1c4:	9a bb       	out	0x1a, r25	; 26
 1c6:	9b b3       	in	r25, 0x1b	; 27
 1c8:	89 23       	and	r24, r25
 1ca:	8b bb       	out	0x1b, r24	; 27
 1cc:	08 95       	ret
 1ce:	62 30       	cpi	r22, 0x02	; 2
 1d0:	91 f4       	brne	.+36     	; 0x1f6 <Set_Channel_Direction+0x70>
 1d2:	4a b3       	in	r20, 0x1a	; 26
 1d4:	21 e0       	ldi	r18, 0x01	; 1
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	b9 01       	movw	r22, r18
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <Set_Channel_Direction+0x5a>
 1dc:	66 0f       	add	r22, r22
 1de:	77 1f       	adc	r23, r23
 1e0:	9a 95       	dec	r25
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <Set_Channel_Direction+0x56>
 1e4:	cb 01       	movw	r24, r22
 1e6:	96 2f       	mov	r25, r22
 1e8:	90 95       	com	r25
 1ea:	94 23       	and	r25, r20
 1ec:	9a bb       	out	0x1a, r25	; 26
 1ee:	9b b3       	in	r25, 0x1b	; 27
 1f0:	89 2b       	or	r24, r25
 1f2:	8b bb       	out	0x1b, r24	; 27
 1f4:	08 95       	ret
 1f6:	61 30       	cpi	r22, 0x01	; 1
 1f8:	09 f0       	breq	.+2      	; 0x1fc <Set_Channel_Direction+0x76>
 1fa:	b3 c0       	rjmp	.+358    	; 0x362 <Set_Channel_Direction+0x1dc>
 1fc:	4a b3       	in	r20, 0x1a	; 26
 1fe:	21 e0       	ldi	r18, 0x01	; 1
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	b9 01       	movw	r22, r18
 204:	02 c0       	rjmp	.+4      	; 0x20a <Set_Channel_Direction+0x84>
 206:	66 0f       	add	r22, r22
 208:	77 1f       	adc	r23, r23
 20a:	9a 95       	dec	r25
 20c:	e2 f7       	brpl	.-8      	; 0x206 <Set_Channel_Direction+0x80>
 20e:	cb 01       	movw	r24, r22
 210:	84 2b       	or	r24, r20
 212:	8a bb       	out	0x1a, r24	; 26
 214:	08 95       	ret
 216:	61 11       	cpse	r22, r1
 218:	12 c0       	rjmp	.+36     	; 0x23e <Set_Channel_Direction+0xb8>
 21a:	47 b3       	in	r20, 0x17	; 23
 21c:	21 e0       	ldi	r18, 0x01	; 1
 21e:	30 e0       	ldi	r19, 0x00	; 0
 220:	b9 01       	movw	r22, r18
 222:	02 c0       	rjmp	.+4      	; 0x228 <Set_Channel_Direction+0xa2>
 224:	66 0f       	add	r22, r22
 226:	77 1f       	adc	r23, r23
 228:	9a 95       	dec	r25
 22a:	e2 f7       	brpl	.-8      	; 0x224 <Set_Channel_Direction+0x9e>
 22c:	cb 01       	movw	r24, r22
 22e:	80 95       	com	r24
 230:	94 2f       	mov	r25, r20
 232:	98 23       	and	r25, r24
 234:	97 bb       	out	0x17, r25	; 23
 236:	98 b3       	in	r25, 0x18	; 24
 238:	89 23       	and	r24, r25
 23a:	88 bb       	out	0x18, r24	; 24
 23c:	08 95       	ret
 23e:	62 30       	cpi	r22, 0x02	; 2
 240:	91 f4       	brne	.+36     	; 0x266 <Set_Channel_Direction+0xe0>
 242:	47 b3       	in	r20, 0x17	; 23
 244:	21 e0       	ldi	r18, 0x01	; 1
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	b9 01       	movw	r22, r18
 24a:	02 c0       	rjmp	.+4      	; 0x250 <Set_Channel_Direction+0xca>
 24c:	66 0f       	add	r22, r22
 24e:	77 1f       	adc	r23, r23
 250:	9a 95       	dec	r25
 252:	e2 f7       	brpl	.-8      	; 0x24c <Set_Channel_Direction+0xc6>
 254:	cb 01       	movw	r24, r22
 256:	96 2f       	mov	r25, r22
 258:	90 95       	com	r25
 25a:	94 23       	and	r25, r20
 25c:	97 bb       	out	0x17, r25	; 23
 25e:	98 b3       	in	r25, 0x18	; 24
 260:	89 2b       	or	r24, r25
 262:	88 bb       	out	0x18, r24	; 24
 264:	08 95       	ret
 266:	61 30       	cpi	r22, 0x01	; 1
 268:	09 f0       	breq	.+2      	; 0x26c <Set_Channel_Direction+0xe6>
 26a:	7b c0       	rjmp	.+246    	; 0x362 <Set_Channel_Direction+0x1dc>
 26c:	47 b3       	in	r20, 0x17	; 23
 26e:	21 e0       	ldi	r18, 0x01	; 1
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	b9 01       	movw	r22, r18
 274:	02 c0       	rjmp	.+4      	; 0x27a <Set_Channel_Direction+0xf4>
 276:	66 0f       	add	r22, r22
 278:	77 1f       	adc	r23, r23
 27a:	9a 95       	dec	r25
 27c:	e2 f7       	brpl	.-8      	; 0x276 <Set_Channel_Direction+0xf0>
 27e:	cb 01       	movw	r24, r22
 280:	84 2b       	or	r24, r20
 282:	87 bb       	out	0x17, r24	; 23
 284:	08 95       	ret
 286:	61 11       	cpse	r22, r1
 288:	12 c0       	rjmp	.+36     	; 0x2ae <Set_Channel_Direction+0x128>
 28a:	44 b3       	in	r20, 0x14	; 20
 28c:	21 e0       	ldi	r18, 0x01	; 1
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	b9 01       	movw	r22, r18
 292:	02 c0       	rjmp	.+4      	; 0x298 <Set_Channel_Direction+0x112>
 294:	66 0f       	add	r22, r22
 296:	77 1f       	adc	r23, r23
 298:	9a 95       	dec	r25
 29a:	e2 f7       	brpl	.-8      	; 0x294 <Set_Channel_Direction+0x10e>
 29c:	cb 01       	movw	r24, r22
 29e:	80 95       	com	r24
 2a0:	94 2f       	mov	r25, r20
 2a2:	98 23       	and	r25, r24
 2a4:	94 bb       	out	0x14, r25	; 20
 2a6:	95 b3       	in	r25, 0x15	; 21
 2a8:	89 23       	and	r24, r25
 2aa:	85 bb       	out	0x15, r24	; 21
 2ac:	08 95       	ret
 2ae:	62 30       	cpi	r22, 0x02	; 2
 2b0:	91 f4       	brne	.+36     	; 0x2d6 <Set_Channel_Direction+0x150>
 2b2:	44 b3       	in	r20, 0x14	; 20
 2b4:	21 e0       	ldi	r18, 0x01	; 1
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	b9 01       	movw	r22, r18
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <Set_Channel_Direction+0x13a>
 2bc:	66 0f       	add	r22, r22
 2be:	77 1f       	adc	r23, r23
 2c0:	9a 95       	dec	r25
 2c2:	e2 f7       	brpl	.-8      	; 0x2bc <Set_Channel_Direction+0x136>
 2c4:	cb 01       	movw	r24, r22
 2c6:	96 2f       	mov	r25, r22
 2c8:	90 95       	com	r25
 2ca:	94 23       	and	r25, r20
 2cc:	94 bb       	out	0x14, r25	; 20
 2ce:	95 b3       	in	r25, 0x15	; 21
 2d0:	89 2b       	or	r24, r25
 2d2:	85 bb       	out	0x15, r24	; 21
 2d4:	08 95       	ret
 2d6:	61 30       	cpi	r22, 0x01	; 1
 2d8:	09 f0       	breq	.+2      	; 0x2dc <Set_Channel_Direction+0x156>
 2da:	43 c0       	rjmp	.+134    	; 0x362 <Set_Channel_Direction+0x1dc>
 2dc:	44 b3       	in	r20, 0x14	; 20
 2de:	21 e0       	ldi	r18, 0x01	; 1
 2e0:	30 e0       	ldi	r19, 0x00	; 0
 2e2:	b9 01       	movw	r22, r18
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <Set_Channel_Direction+0x164>
 2e6:	66 0f       	add	r22, r22
 2e8:	77 1f       	adc	r23, r23
 2ea:	9a 95       	dec	r25
 2ec:	e2 f7       	brpl	.-8      	; 0x2e6 <Set_Channel_Direction+0x160>
 2ee:	cb 01       	movw	r24, r22
 2f0:	84 2b       	or	r24, r20
 2f2:	84 bb       	out	0x14, r24	; 20
 2f4:	08 95       	ret
 2f6:	61 11       	cpse	r22, r1
 2f8:	12 c0       	rjmp	.+36     	; 0x31e <Set_Channel_Direction+0x198>
 2fa:	41 b3       	in	r20, 0x11	; 17
 2fc:	21 e0       	ldi	r18, 0x01	; 1
 2fe:	30 e0       	ldi	r19, 0x00	; 0
 300:	b9 01       	movw	r22, r18
 302:	02 c0       	rjmp	.+4      	; 0x308 <Set_Channel_Direction+0x182>
 304:	66 0f       	add	r22, r22
 306:	77 1f       	adc	r23, r23
 308:	9a 95       	dec	r25
 30a:	e2 f7       	brpl	.-8      	; 0x304 <Set_Channel_Direction+0x17e>
 30c:	cb 01       	movw	r24, r22
 30e:	80 95       	com	r24
 310:	94 2f       	mov	r25, r20
 312:	98 23       	and	r25, r24
 314:	91 bb       	out	0x11, r25	; 17
 316:	92 b3       	in	r25, 0x12	; 18
 318:	89 23       	and	r24, r25
 31a:	82 bb       	out	0x12, r24	; 18
 31c:	08 95       	ret
 31e:	62 30       	cpi	r22, 0x02	; 2
 320:	91 f4       	brne	.+36     	; 0x346 <Set_Channel_Direction+0x1c0>
 322:	41 b3       	in	r20, 0x11	; 17
 324:	21 e0       	ldi	r18, 0x01	; 1
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	b9 01       	movw	r22, r18
 32a:	02 c0       	rjmp	.+4      	; 0x330 <Set_Channel_Direction+0x1aa>
 32c:	66 0f       	add	r22, r22
 32e:	77 1f       	adc	r23, r23
 330:	9a 95       	dec	r25
 332:	e2 f7       	brpl	.-8      	; 0x32c <Set_Channel_Direction+0x1a6>
 334:	cb 01       	movw	r24, r22
 336:	96 2f       	mov	r25, r22
 338:	90 95       	com	r25
 33a:	94 23       	and	r25, r20
 33c:	91 bb       	out	0x11, r25	; 17
 33e:	92 b3       	in	r25, 0x12	; 18
 340:	89 2b       	or	r24, r25
 342:	82 bb       	out	0x12, r24	; 18
 344:	08 95       	ret
 346:	61 30       	cpi	r22, 0x01	; 1
 348:	61 f4       	brne	.+24     	; 0x362 <Set_Channel_Direction+0x1dc>
 34a:	41 b3       	in	r20, 0x11	; 17
 34c:	21 e0       	ldi	r18, 0x01	; 1
 34e:	30 e0       	ldi	r19, 0x00	; 0
 350:	b9 01       	movw	r22, r18
 352:	02 c0       	rjmp	.+4      	; 0x358 <Set_Channel_Direction+0x1d2>
 354:	66 0f       	add	r22, r22
 356:	77 1f       	adc	r23, r23
 358:	9a 95       	dec	r25
 35a:	e2 f7       	brpl	.-8      	; 0x354 <Set_Channel_Direction+0x1ce>
 35c:	cb 01       	movw	r24, r22
 35e:	84 2b       	or	r24, r20
 360:	81 bb       	out	0x11, r24	; 17
 362:	08 95       	ret

00000364 <Write_Channel>:
 364:	98 2f       	mov	r25, r24
 366:	97 70       	andi	r25, 0x07	; 7
 368:	86 95       	lsr	r24
 36a:	86 95       	lsr	r24
 36c:	86 95       	lsr	r24
 36e:	81 30       	cpi	r24, 0x01	; 1
 370:	41 f1       	breq	.+80     	; 0x3c2 <Write_Channel+0x5e>
 372:	38 f0       	brcs	.+14     	; 0x382 <Write_Channel+0x1e>
 374:	82 30       	cpi	r24, 0x02	; 2
 376:	09 f4       	brne	.+2      	; 0x37a <Write_Channel+0x16>
 378:	44 c0       	rjmp	.+136    	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 37a:	83 30       	cpi	r24, 0x03	; 3
 37c:	09 f4       	brne	.+2      	; 0x380 <Write_Channel+0x1c>
 37e:	60 c0       	rjmp	.+192    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 380:	08 95       	ret
 382:	61 11       	cpse	r22, r1
 384:	0e c0       	rjmp	.+28     	; 0x3a2 <Write_Channel+0x3e>
 386:	4b b3       	in	r20, 0x1b	; 27
 388:	21 e0       	ldi	r18, 0x01	; 1
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	b9 01       	movw	r22, r18
 38e:	02 c0       	rjmp	.+4      	; 0x394 <Write_Channel+0x30>
 390:	66 0f       	add	r22, r22
 392:	77 1f       	adc	r23, r23
 394:	9a 95       	dec	r25
 396:	e2 f7       	brpl	.-8      	; 0x390 <Write_Channel+0x2c>
 398:	cb 01       	movw	r24, r22
 39a:	80 95       	com	r24
 39c:	84 23       	and	r24, r20
 39e:	8b bb       	out	0x1b, r24	; 27
 3a0:	08 95       	ret
 3a2:	61 30       	cpi	r22, 0x01	; 1
 3a4:	09 f0       	breq	.+2      	; 0x3a8 <Write_Channel+0x44>
 3a6:	6a c0       	rjmp	.+212    	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 3a8:	4b b3       	in	r20, 0x1b	; 27
 3aa:	21 e0       	ldi	r18, 0x01	; 1
 3ac:	30 e0       	ldi	r19, 0x00	; 0
 3ae:	b9 01       	movw	r22, r18
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <Write_Channel+0x52>
 3b2:	66 0f       	add	r22, r22
 3b4:	77 1f       	adc	r23, r23
 3b6:	9a 95       	dec	r25
 3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <Write_Channel+0x4e>
 3ba:	cb 01       	movw	r24, r22
 3bc:	84 2b       	or	r24, r20
 3be:	8b bb       	out	0x1b, r24	; 27
 3c0:	08 95       	ret
 3c2:	61 11       	cpse	r22, r1
 3c4:	0e c0       	rjmp	.+28     	; 0x3e2 <Write_Channel+0x7e>
 3c6:	48 b3       	in	r20, 0x18	; 24
 3c8:	21 e0       	ldi	r18, 0x01	; 1
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	b9 01       	movw	r22, r18
 3ce:	02 c0       	rjmp	.+4      	; 0x3d4 <Write_Channel+0x70>
 3d0:	66 0f       	add	r22, r22
 3d2:	77 1f       	adc	r23, r23
 3d4:	9a 95       	dec	r25
 3d6:	e2 f7       	brpl	.-8      	; 0x3d0 <Write_Channel+0x6c>
 3d8:	cb 01       	movw	r24, r22
 3da:	80 95       	com	r24
 3dc:	84 23       	and	r24, r20
 3de:	88 bb       	out	0x18, r24	; 24
 3e0:	08 95       	ret
 3e2:	61 30       	cpi	r22, 0x01	; 1
 3e4:	09 f0       	breq	.+2      	; 0x3e8 <Write_Channel+0x84>
 3e6:	4a c0       	rjmp	.+148    	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 3e8:	48 b3       	in	r20, 0x18	; 24
 3ea:	21 e0       	ldi	r18, 0x01	; 1
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	b9 01       	movw	r22, r18
 3f0:	02 c0       	rjmp	.+4      	; 0x3f6 <Write_Channel+0x92>
 3f2:	66 0f       	add	r22, r22
 3f4:	77 1f       	adc	r23, r23
 3f6:	9a 95       	dec	r25
 3f8:	e2 f7       	brpl	.-8      	; 0x3f2 <Write_Channel+0x8e>
 3fa:	cb 01       	movw	r24, r22
 3fc:	84 2b       	or	r24, r20
 3fe:	88 bb       	out	0x18, r24	; 24
 400:	08 95       	ret
 402:	61 11       	cpse	r22, r1
 404:	0e c0       	rjmp	.+28     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 406:	45 b3       	in	r20, 0x15	; 21
 408:	21 e0       	ldi	r18, 0x01	; 1
 40a:	30 e0       	ldi	r19, 0x00	; 0
 40c:	b9 01       	movw	r22, r18
 40e:	02 c0       	rjmp	.+4      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 410:	66 0f       	add	r22, r22
 412:	77 1f       	adc	r23, r23
 414:	9a 95       	dec	r25
 416:	e2 f7       	brpl	.-8      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 418:	cb 01       	movw	r24, r22
 41a:	80 95       	com	r24
 41c:	84 23       	and	r24, r20
 41e:	85 bb       	out	0x15, r24	; 21
 420:	08 95       	ret
 422:	61 30       	cpi	r22, 0x01	; 1
 424:	59 f5       	brne	.+86     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 426:	45 b3       	in	r20, 0x15	; 21
 428:	21 e0       	ldi	r18, 0x01	; 1
 42a:	30 e0       	ldi	r19, 0x00	; 0
 42c:	b9 01       	movw	r22, r18
 42e:	02 c0       	rjmp	.+4      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 430:	66 0f       	add	r22, r22
 432:	77 1f       	adc	r23, r23
 434:	9a 95       	dec	r25
 436:	e2 f7       	brpl	.-8      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 438:	cb 01       	movw	r24, r22
 43a:	84 2b       	or	r24, r20
 43c:	85 bb       	out	0x15, r24	; 21
 43e:	08 95       	ret
 440:	61 11       	cpse	r22, r1
 442:	0e c0       	rjmp	.+28     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 444:	42 b3       	in	r20, 0x12	; 18
 446:	21 e0       	ldi	r18, 0x01	; 1
 448:	30 e0       	ldi	r19, 0x00	; 0
 44a:	b9 01       	movw	r22, r18
 44c:	02 c0       	rjmp	.+4      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 44e:	66 0f       	add	r22, r22
 450:	77 1f       	adc	r23, r23
 452:	9a 95       	dec	r25
 454:	e2 f7       	brpl	.-8      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 456:	cb 01       	movw	r24, r22
 458:	80 95       	com	r24
 45a:	84 23       	and	r24, r20
 45c:	82 bb       	out	0x12, r24	; 18
 45e:	08 95       	ret
 460:	61 30       	cpi	r22, 0x01	; 1
 462:	61 f4       	brne	.+24     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 464:	42 b3       	in	r20, 0x12	; 18
 466:	21 e0       	ldi	r18, 0x01	; 1
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	b9 01       	movw	r22, r18
 46c:	02 c0       	rjmp	.+4      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 46e:	66 0f       	add	r22, r22
 470:	77 1f       	adc	r23, r23
 472:	9a 95       	dec	r25
 474:	e2 f7       	brpl	.-8      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 476:	cb 01       	movw	r24, r22
 478:	84 2b       	or	r24, r20
 47a:	82 bb       	out	0x12, r24	; 18
 47c:	08 95       	ret

0000047e <Write_Port>:
 47e:	81 30       	cpi	r24, 0x01	; 1
 480:	41 f0       	breq	.+16     	; 0x492 <Write_Port+0x14>
 482:	28 f0       	brcs	.+10     	; 0x48e <Write_Port+0x10>
 484:	82 30       	cpi	r24, 0x02	; 2
 486:	39 f0       	breq	.+14     	; 0x496 <Write_Port+0x18>
 488:	83 30       	cpi	r24, 0x03	; 3
 48a:	39 f0       	breq	.+14     	; 0x49a <Write_Port+0x1c>
 48c:	08 95       	ret
 48e:	6b bb       	out	0x1b, r22	; 27
 490:	08 95       	ret
 492:	68 bb       	out	0x18, r22	; 24
 494:	08 95       	ret
 496:	65 bb       	out	0x15, r22	; 21
 498:	08 95       	ret
 49a:	62 bb       	out	0x12, r22	; 18
 49c:	08 95       	ret

0000049e <Read_Port>:
 49e:	81 30       	cpi	r24, 0x01	; 1
 4a0:	41 f0       	breq	.+16     	; 0x4b2 <Read_Port+0x14>
 4a2:	28 f0       	brcs	.+10     	; 0x4ae <Read_Port+0x10>
 4a4:	82 30       	cpi	r24, 0x02	; 2
 4a6:	39 f0       	breq	.+14     	; 0x4b6 <Read_Port+0x18>
 4a8:	83 30       	cpi	r24, 0x03	; 3
 4aa:	39 f0       	breq	.+14     	; 0x4ba <Read_Port+0x1c>
 4ac:	07 c0       	rjmp	.+14     	; 0x4bc <Read_Port+0x1e>
 4ae:	99 b3       	in	r25, 0x19	; 25
 4b0:	05 c0       	rjmp	.+10     	; 0x4bc <Read_Port+0x1e>
 4b2:	96 b3       	in	r25, 0x16	; 22
 4b4:	03 c0       	rjmp	.+6      	; 0x4bc <Read_Port+0x1e>
 4b6:	93 b3       	in	r25, 0x13	; 19
 4b8:	01 c0       	rjmp	.+2      	; 0x4bc <Read_Port+0x1e>
 4ba:	90 b3       	in	r25, 0x10	; 16
 4bc:	89 2f       	mov	r24, r25
 4be:	08 95       	ret

000004c0 <Write_Nibble>:

void Write_Nibble(DIO_Port Port_ID , uint8 Significance , uint8 Value)
{
 4c0:	cf 93       	push	r28
 4c2:	df 93       	push	r29
 4c4:	d8 2f       	mov	r29, r24
 4c6:	c4 2f       	mov	r28, r20
	Value = (Significance==HIGH)?(Read_Nibble(Port_ID,LOW)|(Value <<4)):((Read_Nibble(Port_ID,HIGH)<<4))|(Value);
 4c8:	61 30       	cpi	r22, 0x01	; 1
 4ca:	41 f4       	brne	.+16     	; 0x4dc <Write_Nibble+0x1c>
}
			
uint8 Read_Nibble(DIO_Port Port_ID , uint8 Significance)
{
	
	uint8 value = Read_Port(Port_ID);
 4cc:	e8 df       	rcall	.-48     	; 0x49e <Read_Port>
	return value ;
}

void Write_Nibble(DIO_Port Port_ID , uint8 Significance , uint8 Value)
{
	Value = (Significance==HIGH)?(Read_Nibble(Port_ID,LOW)|(Value <<4)):((Read_Nibble(Port_ID,HIGH)<<4))|(Value);
 4ce:	8f 70       	andi	r24, 0x0F	; 15
 4d0:	90 e1       	ldi	r25, 0x10	; 16
 4d2:	c9 9f       	mul	r28, r25
 4d4:	b0 01       	movw	r22, r0
 4d6:	11 24       	eor	r1, r1
 4d8:	68 2b       	or	r22, r24
}
			
uint8 Read_Nibble(DIO_Port Port_ID , uint8 Significance)
{
	
	uint8 value = Read_Port(Port_ID);
 4da:	04 c0       	rjmp	.+8      	; 0x4e4 <Write_Nibble+0x24>
 4dc:	e0 df       	rcall	.-64     	; 0x49e <Read_Port>
	return value ;
}

void Write_Nibble(DIO_Port Port_ID , uint8 Significance , uint8 Value)
{
	Value = (Significance==HIGH)?(Read_Nibble(Port_ID,LOW)|(Value <<4)):((Read_Nibble(Port_ID,HIGH)<<4))|(Value);
 4de:	80 7f       	andi	r24, 0xF0	; 240
 4e0:	68 2f       	mov	r22, r24
	Write_Port(Port_ID,Value);
 4e2:	6c 2b       	or	r22, r28
 4e4:	8d 2f       	mov	r24, r29
 4e6:	cb df       	rcall	.-106    	; 0x47e <Write_Port>
 4e8:	df 91       	pop	r29
 4ea:	cf 91       	pop	r28
 4ec:	08 95       	ret

000004ee <__divsf3>:
 4ee:	0c d0       	rcall	.+24     	; 0x508 <__divsf3x>
 4f0:	eb c0       	rjmp	.+470    	; 0x6c8 <__fp_round>
 4f2:	e3 d0       	rcall	.+454    	; 0x6ba <__fp_pscB>
 4f4:	40 f0       	brcs	.+16     	; 0x506 <__divsf3+0x18>
 4f6:	da d0       	rcall	.+436    	; 0x6ac <__fp_pscA>
 4f8:	30 f0       	brcs	.+12     	; 0x506 <__divsf3+0x18>
 4fa:	21 f4       	brne	.+8      	; 0x504 <__divsf3+0x16>
 4fc:	5f 3f       	cpi	r21, 0xFF	; 255
 4fe:	19 f0       	breq	.+6      	; 0x506 <__divsf3+0x18>
 500:	cc c0       	rjmp	.+408    	; 0x69a <__fp_inf>
 502:	51 11       	cpse	r21, r1
 504:	15 c1       	rjmp	.+554    	; 0x730 <__fp_szero>
 506:	cf c0       	rjmp	.+414    	; 0x6a6 <__fp_nan>

00000508 <__divsf3x>:
 508:	f0 d0       	rcall	.+480    	; 0x6ea <__fp_split3>
 50a:	98 f3       	brcs	.-26     	; 0x4f2 <__divsf3+0x4>

0000050c <__divsf3_pse>:
 50c:	99 23       	and	r25, r25
 50e:	c9 f3       	breq	.-14     	; 0x502 <__divsf3+0x14>
 510:	55 23       	and	r21, r21
 512:	b1 f3       	breq	.-20     	; 0x500 <__divsf3+0x12>
 514:	95 1b       	sub	r25, r21
 516:	55 0b       	sbc	r21, r21
 518:	bb 27       	eor	r27, r27
 51a:	aa 27       	eor	r26, r26
 51c:	62 17       	cp	r22, r18
 51e:	73 07       	cpc	r23, r19
 520:	84 07       	cpc	r24, r20
 522:	38 f0       	brcs	.+14     	; 0x532 <__divsf3_pse+0x26>
 524:	9f 5f       	subi	r25, 0xFF	; 255
 526:	5f 4f       	sbci	r21, 0xFF	; 255
 528:	22 0f       	add	r18, r18
 52a:	33 1f       	adc	r19, r19
 52c:	44 1f       	adc	r20, r20
 52e:	aa 1f       	adc	r26, r26
 530:	a9 f3       	breq	.-22     	; 0x51c <__divsf3_pse+0x10>
 532:	33 d0       	rcall	.+102    	; 0x59a <__divsf3_pse+0x8e>
 534:	0e 2e       	mov	r0, r30
 536:	3a f0       	brmi	.+14     	; 0x546 <__divsf3_pse+0x3a>
 538:	e0 e8       	ldi	r30, 0x80	; 128
 53a:	30 d0       	rcall	.+96     	; 0x59c <__divsf3_pse+0x90>
 53c:	91 50       	subi	r25, 0x01	; 1
 53e:	50 40       	sbci	r21, 0x00	; 0
 540:	e6 95       	lsr	r30
 542:	00 1c       	adc	r0, r0
 544:	ca f7       	brpl	.-14     	; 0x538 <__divsf3_pse+0x2c>
 546:	29 d0       	rcall	.+82     	; 0x59a <__divsf3_pse+0x8e>
 548:	fe 2f       	mov	r31, r30
 54a:	27 d0       	rcall	.+78     	; 0x59a <__divsf3_pse+0x8e>
 54c:	66 0f       	add	r22, r22
 54e:	77 1f       	adc	r23, r23
 550:	88 1f       	adc	r24, r24
 552:	bb 1f       	adc	r27, r27
 554:	26 17       	cp	r18, r22
 556:	37 07       	cpc	r19, r23
 558:	48 07       	cpc	r20, r24
 55a:	ab 07       	cpc	r26, r27
 55c:	b0 e8       	ldi	r27, 0x80	; 128
 55e:	09 f0       	breq	.+2      	; 0x562 <__divsf3_pse+0x56>
 560:	bb 0b       	sbc	r27, r27
 562:	80 2d       	mov	r24, r0
 564:	bf 01       	movw	r22, r30
 566:	ff 27       	eor	r31, r31
 568:	93 58       	subi	r25, 0x83	; 131
 56a:	5f 4f       	sbci	r21, 0xFF	; 255
 56c:	2a f0       	brmi	.+10     	; 0x578 <__divsf3_pse+0x6c>
 56e:	9e 3f       	cpi	r25, 0xFE	; 254
 570:	51 05       	cpc	r21, r1
 572:	68 f0       	brcs	.+26     	; 0x58e <__divsf3_pse+0x82>
 574:	92 c0       	rjmp	.+292    	; 0x69a <__fp_inf>
 576:	dc c0       	rjmp	.+440    	; 0x730 <__fp_szero>
 578:	5f 3f       	cpi	r21, 0xFF	; 255
 57a:	ec f3       	brlt	.-6      	; 0x576 <__divsf3_pse+0x6a>
 57c:	98 3e       	cpi	r25, 0xE8	; 232
 57e:	dc f3       	brlt	.-10     	; 0x576 <__divsf3_pse+0x6a>
 580:	86 95       	lsr	r24
 582:	77 95       	ror	r23
 584:	67 95       	ror	r22
 586:	b7 95       	ror	r27
 588:	f7 95       	ror	r31
 58a:	9f 5f       	subi	r25, 0xFF	; 255
 58c:	c9 f7       	brne	.-14     	; 0x580 <__divsf3_pse+0x74>
 58e:	88 0f       	add	r24, r24
 590:	91 1d       	adc	r25, r1
 592:	96 95       	lsr	r25
 594:	87 95       	ror	r24
 596:	97 f9       	bld	r25, 7
 598:	08 95       	ret
 59a:	e1 e0       	ldi	r30, 0x01	; 1
 59c:	66 0f       	add	r22, r22
 59e:	77 1f       	adc	r23, r23
 5a0:	88 1f       	adc	r24, r24
 5a2:	bb 1f       	adc	r27, r27
 5a4:	62 17       	cp	r22, r18
 5a6:	73 07       	cpc	r23, r19
 5a8:	84 07       	cpc	r24, r20
 5aa:	ba 07       	cpc	r27, r26
 5ac:	20 f0       	brcs	.+8      	; 0x5b6 <__divsf3_pse+0xaa>
 5ae:	62 1b       	sub	r22, r18
 5b0:	73 0b       	sbc	r23, r19
 5b2:	84 0b       	sbc	r24, r20
 5b4:	ba 0b       	sbc	r27, r26
 5b6:	ee 1f       	adc	r30, r30
 5b8:	88 f7       	brcc	.-30     	; 0x59c <__divsf3_pse+0x90>
 5ba:	e0 95       	com	r30
 5bc:	08 95       	ret

000005be <__fixsfsi>:
 5be:	04 d0       	rcall	.+8      	; 0x5c8 <__fixunssfsi>
 5c0:	68 94       	set
 5c2:	b1 11       	cpse	r27, r1
 5c4:	b5 c0       	rjmp	.+362    	; 0x730 <__fp_szero>
 5c6:	08 95       	ret

000005c8 <__fixunssfsi>:
 5c8:	98 d0       	rcall	.+304    	; 0x6fa <__fp_splitA>
 5ca:	88 f0       	brcs	.+34     	; 0x5ee <__fixunssfsi+0x26>
 5cc:	9f 57       	subi	r25, 0x7F	; 127
 5ce:	90 f0       	brcs	.+36     	; 0x5f4 <__fixunssfsi+0x2c>
 5d0:	b9 2f       	mov	r27, r25
 5d2:	99 27       	eor	r25, r25
 5d4:	b7 51       	subi	r27, 0x17	; 23
 5d6:	a0 f0       	brcs	.+40     	; 0x600 <__fixunssfsi+0x38>
 5d8:	d1 f0       	breq	.+52     	; 0x60e <__fixunssfsi+0x46>
 5da:	66 0f       	add	r22, r22
 5dc:	77 1f       	adc	r23, r23
 5de:	88 1f       	adc	r24, r24
 5e0:	99 1f       	adc	r25, r25
 5e2:	1a f0       	brmi	.+6      	; 0x5ea <__fixunssfsi+0x22>
 5e4:	ba 95       	dec	r27
 5e6:	c9 f7       	brne	.-14     	; 0x5da <__fixunssfsi+0x12>
 5e8:	12 c0       	rjmp	.+36     	; 0x60e <__fixunssfsi+0x46>
 5ea:	b1 30       	cpi	r27, 0x01	; 1
 5ec:	81 f0       	breq	.+32     	; 0x60e <__fixunssfsi+0x46>
 5ee:	9f d0       	rcall	.+318    	; 0x72e <__fp_zero>
 5f0:	b1 e0       	ldi	r27, 0x01	; 1
 5f2:	08 95       	ret
 5f4:	9c c0       	rjmp	.+312    	; 0x72e <__fp_zero>
 5f6:	67 2f       	mov	r22, r23
 5f8:	78 2f       	mov	r23, r24
 5fa:	88 27       	eor	r24, r24
 5fc:	b8 5f       	subi	r27, 0xF8	; 248
 5fe:	39 f0       	breq	.+14     	; 0x60e <__fixunssfsi+0x46>
 600:	b9 3f       	cpi	r27, 0xF9	; 249
 602:	cc f3       	brlt	.-14     	; 0x5f6 <__fixunssfsi+0x2e>
 604:	86 95       	lsr	r24
 606:	77 95       	ror	r23
 608:	67 95       	ror	r22
 60a:	b3 95       	inc	r27
 60c:	d9 f7       	brne	.-10     	; 0x604 <__fixunssfsi+0x3c>
 60e:	3e f4       	brtc	.+14     	; 0x61e <__fixunssfsi+0x56>
 610:	90 95       	com	r25
 612:	80 95       	com	r24
 614:	70 95       	com	r23
 616:	61 95       	neg	r22
 618:	7f 4f       	sbci	r23, 0xFF	; 255
 61a:	8f 4f       	sbci	r24, 0xFF	; 255
 61c:	9f 4f       	sbci	r25, 0xFF	; 255
 61e:	08 95       	ret

00000620 <__floatunsisf>:
 620:	e8 94       	clt
 622:	09 c0       	rjmp	.+18     	; 0x636 <__floatsisf+0x12>

00000624 <__floatsisf>:
 624:	97 fb       	bst	r25, 7
 626:	3e f4       	brtc	.+14     	; 0x636 <__floatsisf+0x12>
 628:	90 95       	com	r25
 62a:	80 95       	com	r24
 62c:	70 95       	com	r23
 62e:	61 95       	neg	r22
 630:	7f 4f       	sbci	r23, 0xFF	; 255
 632:	8f 4f       	sbci	r24, 0xFF	; 255
 634:	9f 4f       	sbci	r25, 0xFF	; 255
 636:	99 23       	and	r25, r25
 638:	a9 f0       	breq	.+42     	; 0x664 <__floatsisf+0x40>
 63a:	f9 2f       	mov	r31, r25
 63c:	96 e9       	ldi	r25, 0x96	; 150
 63e:	bb 27       	eor	r27, r27
 640:	93 95       	inc	r25
 642:	f6 95       	lsr	r31
 644:	87 95       	ror	r24
 646:	77 95       	ror	r23
 648:	67 95       	ror	r22
 64a:	b7 95       	ror	r27
 64c:	f1 11       	cpse	r31, r1
 64e:	f8 cf       	rjmp	.-16     	; 0x640 <__floatsisf+0x1c>
 650:	fa f4       	brpl	.+62     	; 0x690 <__floatsisf+0x6c>
 652:	bb 0f       	add	r27, r27
 654:	11 f4       	brne	.+4      	; 0x65a <__floatsisf+0x36>
 656:	60 ff       	sbrs	r22, 0
 658:	1b c0       	rjmp	.+54     	; 0x690 <__floatsisf+0x6c>
 65a:	6f 5f       	subi	r22, 0xFF	; 255
 65c:	7f 4f       	sbci	r23, 0xFF	; 255
 65e:	8f 4f       	sbci	r24, 0xFF	; 255
 660:	9f 4f       	sbci	r25, 0xFF	; 255
 662:	16 c0       	rjmp	.+44     	; 0x690 <__floatsisf+0x6c>
 664:	88 23       	and	r24, r24
 666:	11 f0       	breq	.+4      	; 0x66c <__floatsisf+0x48>
 668:	96 e9       	ldi	r25, 0x96	; 150
 66a:	11 c0       	rjmp	.+34     	; 0x68e <__floatsisf+0x6a>
 66c:	77 23       	and	r23, r23
 66e:	21 f0       	breq	.+8      	; 0x678 <__floatsisf+0x54>
 670:	9e e8       	ldi	r25, 0x8E	; 142
 672:	87 2f       	mov	r24, r23
 674:	76 2f       	mov	r23, r22
 676:	05 c0       	rjmp	.+10     	; 0x682 <__floatsisf+0x5e>
 678:	66 23       	and	r22, r22
 67a:	71 f0       	breq	.+28     	; 0x698 <__floatsisf+0x74>
 67c:	96 e8       	ldi	r25, 0x86	; 134
 67e:	86 2f       	mov	r24, r22
 680:	70 e0       	ldi	r23, 0x00	; 0
 682:	60 e0       	ldi	r22, 0x00	; 0
 684:	2a f0       	brmi	.+10     	; 0x690 <__floatsisf+0x6c>
 686:	9a 95       	dec	r25
 688:	66 0f       	add	r22, r22
 68a:	77 1f       	adc	r23, r23
 68c:	88 1f       	adc	r24, r24
 68e:	da f7       	brpl	.-10     	; 0x686 <__floatsisf+0x62>
 690:	88 0f       	add	r24, r24
 692:	96 95       	lsr	r25
 694:	87 95       	ror	r24
 696:	97 f9       	bld	r25, 7
 698:	08 95       	ret

0000069a <__fp_inf>:
 69a:	97 f9       	bld	r25, 7
 69c:	9f 67       	ori	r25, 0x7F	; 127
 69e:	80 e8       	ldi	r24, 0x80	; 128
 6a0:	70 e0       	ldi	r23, 0x00	; 0
 6a2:	60 e0       	ldi	r22, 0x00	; 0
 6a4:	08 95       	ret

000006a6 <__fp_nan>:
 6a6:	9f ef       	ldi	r25, 0xFF	; 255
 6a8:	80 ec       	ldi	r24, 0xC0	; 192
 6aa:	08 95       	ret

000006ac <__fp_pscA>:
 6ac:	00 24       	eor	r0, r0
 6ae:	0a 94       	dec	r0
 6b0:	16 16       	cp	r1, r22
 6b2:	17 06       	cpc	r1, r23
 6b4:	18 06       	cpc	r1, r24
 6b6:	09 06       	cpc	r0, r25
 6b8:	08 95       	ret

000006ba <__fp_pscB>:
 6ba:	00 24       	eor	r0, r0
 6bc:	0a 94       	dec	r0
 6be:	12 16       	cp	r1, r18
 6c0:	13 06       	cpc	r1, r19
 6c2:	14 06       	cpc	r1, r20
 6c4:	05 06       	cpc	r0, r21
 6c6:	08 95       	ret

000006c8 <__fp_round>:
 6c8:	09 2e       	mov	r0, r25
 6ca:	03 94       	inc	r0
 6cc:	00 0c       	add	r0, r0
 6ce:	11 f4       	brne	.+4      	; 0x6d4 <__fp_round+0xc>
 6d0:	88 23       	and	r24, r24
 6d2:	52 f0       	brmi	.+20     	; 0x6e8 <__fp_round+0x20>
 6d4:	bb 0f       	add	r27, r27
 6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__fp_round+0x20>
 6d8:	bf 2b       	or	r27, r31
 6da:	11 f4       	brne	.+4      	; 0x6e0 <__fp_round+0x18>
 6dc:	60 ff       	sbrs	r22, 0
 6de:	04 c0       	rjmp	.+8      	; 0x6e8 <__fp_round+0x20>
 6e0:	6f 5f       	subi	r22, 0xFF	; 255
 6e2:	7f 4f       	sbci	r23, 0xFF	; 255
 6e4:	8f 4f       	sbci	r24, 0xFF	; 255
 6e6:	9f 4f       	sbci	r25, 0xFF	; 255
 6e8:	08 95       	ret

000006ea <__fp_split3>:
 6ea:	57 fd       	sbrc	r21, 7
 6ec:	90 58       	subi	r25, 0x80	; 128
 6ee:	44 0f       	add	r20, r20
 6f0:	55 1f       	adc	r21, r21
 6f2:	59 f0       	breq	.+22     	; 0x70a <__fp_splitA+0x10>
 6f4:	5f 3f       	cpi	r21, 0xFF	; 255
 6f6:	71 f0       	breq	.+28     	; 0x714 <__fp_splitA+0x1a>
 6f8:	47 95       	ror	r20

000006fa <__fp_splitA>:
 6fa:	88 0f       	add	r24, r24
 6fc:	97 fb       	bst	r25, 7
 6fe:	99 1f       	adc	r25, r25
 700:	61 f0       	breq	.+24     	; 0x71a <__fp_splitA+0x20>
 702:	9f 3f       	cpi	r25, 0xFF	; 255
 704:	79 f0       	breq	.+30     	; 0x724 <__fp_splitA+0x2a>
 706:	87 95       	ror	r24
 708:	08 95       	ret
 70a:	12 16       	cp	r1, r18
 70c:	13 06       	cpc	r1, r19
 70e:	14 06       	cpc	r1, r20
 710:	55 1f       	adc	r21, r21
 712:	f2 cf       	rjmp	.-28     	; 0x6f8 <__fp_split3+0xe>
 714:	46 95       	lsr	r20
 716:	f1 df       	rcall	.-30     	; 0x6fa <__fp_splitA>
 718:	08 c0       	rjmp	.+16     	; 0x72a <__fp_splitA+0x30>
 71a:	16 16       	cp	r1, r22
 71c:	17 06       	cpc	r1, r23
 71e:	18 06       	cpc	r1, r24
 720:	99 1f       	adc	r25, r25
 722:	f1 cf       	rjmp	.-30     	; 0x706 <__fp_splitA+0xc>
 724:	86 95       	lsr	r24
 726:	71 05       	cpc	r23, r1
 728:	61 05       	cpc	r22, r1
 72a:	08 94       	sec
 72c:	08 95       	ret

0000072e <__fp_zero>:
 72e:	e8 94       	clt

00000730 <__fp_szero>:
 730:	bb 27       	eor	r27, r27
 732:	66 27       	eor	r22, r22
 734:	77 27       	eor	r23, r23
 736:	cb 01       	movw	r24, r22
 738:	97 f9       	bld	r25, 7
 73a:	08 95       	ret

0000073c <__mulsf3>:
 73c:	0b d0       	rcall	.+22     	; 0x754 <__mulsf3x>
 73e:	c4 cf       	rjmp	.-120    	; 0x6c8 <__fp_round>
 740:	b5 df       	rcall	.-150    	; 0x6ac <__fp_pscA>
 742:	28 f0       	brcs	.+10     	; 0x74e <__mulsf3+0x12>
 744:	ba df       	rcall	.-140    	; 0x6ba <__fp_pscB>
 746:	18 f0       	brcs	.+6      	; 0x74e <__mulsf3+0x12>
 748:	95 23       	and	r25, r21
 74a:	09 f0       	breq	.+2      	; 0x74e <__mulsf3+0x12>
 74c:	a6 cf       	rjmp	.-180    	; 0x69a <__fp_inf>
 74e:	ab cf       	rjmp	.-170    	; 0x6a6 <__fp_nan>
 750:	11 24       	eor	r1, r1
 752:	ee cf       	rjmp	.-36     	; 0x730 <__fp_szero>

00000754 <__mulsf3x>:
 754:	ca df       	rcall	.-108    	; 0x6ea <__fp_split3>
 756:	a0 f3       	brcs	.-24     	; 0x740 <__mulsf3+0x4>

00000758 <__mulsf3_pse>:
 758:	95 9f       	mul	r25, r21
 75a:	d1 f3       	breq	.-12     	; 0x750 <__mulsf3+0x14>
 75c:	95 0f       	add	r25, r21
 75e:	50 e0       	ldi	r21, 0x00	; 0
 760:	55 1f       	adc	r21, r21
 762:	62 9f       	mul	r22, r18
 764:	f0 01       	movw	r30, r0
 766:	72 9f       	mul	r23, r18
 768:	bb 27       	eor	r27, r27
 76a:	f0 0d       	add	r31, r0
 76c:	b1 1d       	adc	r27, r1
 76e:	63 9f       	mul	r22, r19
 770:	aa 27       	eor	r26, r26
 772:	f0 0d       	add	r31, r0
 774:	b1 1d       	adc	r27, r1
 776:	aa 1f       	adc	r26, r26
 778:	64 9f       	mul	r22, r20
 77a:	66 27       	eor	r22, r22
 77c:	b0 0d       	add	r27, r0
 77e:	a1 1d       	adc	r26, r1
 780:	66 1f       	adc	r22, r22
 782:	82 9f       	mul	r24, r18
 784:	22 27       	eor	r18, r18
 786:	b0 0d       	add	r27, r0
 788:	a1 1d       	adc	r26, r1
 78a:	62 1f       	adc	r22, r18
 78c:	73 9f       	mul	r23, r19
 78e:	b0 0d       	add	r27, r0
 790:	a1 1d       	adc	r26, r1
 792:	62 1f       	adc	r22, r18
 794:	83 9f       	mul	r24, r19
 796:	a0 0d       	add	r26, r0
 798:	61 1d       	adc	r22, r1
 79a:	22 1f       	adc	r18, r18
 79c:	74 9f       	mul	r23, r20
 79e:	33 27       	eor	r19, r19
 7a0:	a0 0d       	add	r26, r0
 7a2:	61 1d       	adc	r22, r1
 7a4:	23 1f       	adc	r18, r19
 7a6:	84 9f       	mul	r24, r20
 7a8:	60 0d       	add	r22, r0
 7aa:	21 1d       	adc	r18, r1
 7ac:	82 2f       	mov	r24, r18
 7ae:	76 2f       	mov	r23, r22
 7b0:	6a 2f       	mov	r22, r26
 7b2:	11 24       	eor	r1, r1
 7b4:	9f 57       	subi	r25, 0x7F	; 127
 7b6:	50 40       	sbci	r21, 0x00	; 0
 7b8:	8a f0       	brmi	.+34     	; 0x7dc <__mulsf3_pse+0x84>
 7ba:	e1 f0       	breq	.+56     	; 0x7f4 <__mulsf3_pse+0x9c>
 7bc:	88 23       	and	r24, r24
 7be:	4a f0       	brmi	.+18     	; 0x7d2 <__mulsf3_pse+0x7a>
 7c0:	ee 0f       	add	r30, r30
 7c2:	ff 1f       	adc	r31, r31
 7c4:	bb 1f       	adc	r27, r27
 7c6:	66 1f       	adc	r22, r22
 7c8:	77 1f       	adc	r23, r23
 7ca:	88 1f       	adc	r24, r24
 7cc:	91 50       	subi	r25, 0x01	; 1
 7ce:	50 40       	sbci	r21, 0x00	; 0
 7d0:	a9 f7       	brne	.-22     	; 0x7bc <__mulsf3_pse+0x64>
 7d2:	9e 3f       	cpi	r25, 0xFE	; 254
 7d4:	51 05       	cpc	r21, r1
 7d6:	70 f0       	brcs	.+28     	; 0x7f4 <__mulsf3_pse+0x9c>
 7d8:	60 cf       	rjmp	.-320    	; 0x69a <__fp_inf>
 7da:	aa cf       	rjmp	.-172    	; 0x730 <__fp_szero>
 7dc:	5f 3f       	cpi	r21, 0xFF	; 255
 7de:	ec f3       	brlt	.-6      	; 0x7da <__mulsf3_pse+0x82>
 7e0:	98 3e       	cpi	r25, 0xE8	; 232
 7e2:	dc f3       	brlt	.-10     	; 0x7da <__mulsf3_pse+0x82>
 7e4:	86 95       	lsr	r24
 7e6:	77 95       	ror	r23
 7e8:	67 95       	ror	r22
 7ea:	b7 95       	ror	r27
 7ec:	f7 95       	ror	r31
 7ee:	e7 95       	ror	r30
 7f0:	9f 5f       	subi	r25, 0xFF	; 255
 7f2:	c1 f7       	brne	.-16     	; 0x7e4 <__mulsf3_pse+0x8c>
 7f4:	fe 2b       	or	r31, r30
 7f6:	88 0f       	add	r24, r24
 7f8:	91 1d       	adc	r25, r1
 7fa:	96 95       	lsr	r25
 7fc:	87 95       	ror	r24
 7fe:	97 f9       	bld	r25, 7
 800:	08 95       	ret

00000802 <_exit>:
 802:	f8 94       	cli

00000804 <__stop_program>:
 804:	ff cf       	rjmp	.-2      	; 0x804 <__stop_program>
