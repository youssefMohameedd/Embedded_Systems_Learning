/*
 * LCD.c
 *
 * Created: 11/25/2024 10:50:40 AM
 *  Author: Youssef
 */ 

#include <LCD_CFG.h>
#include <STD_Types.h>
#include <DIO.h>
#include <util/delay.h>

#ifndef F_CPU
#define F_CPU 16000000UL
#endif

void LCD_Latch(void)
{
	Write_Channel(LCD_E,HIGH);
	_delay_us(5);
	Write_Channel(LCD_E,LOW);
	_delay_us(5);
}
void LCD_Write_Cmd(uint8 cmd)
{  	
	uint8 nibble = cmd>>4 ;// Higher nibble of the command
	Write_Channel(LCD_RS,LOW);
	Write_Nibble(LCD_PORT,HIGH,nibble);
	LCD_Latch();
	_delay_us(60);
	nibble = (cmd & 0x0F);  // Lower Nibble of the command
	Write_Nibble(LCD_PORT,HIGH,nibble);
	LCD_Latch();
	_delay_us(60);
	if(cmd == 0x00 || cmd == 0x01 ) _delay_ms(3);	
	
}
void LCD_Init(void)
{
	Set_Port_Direction(LCD_PORT,0xFF);
	Set_Channel_Direction(LCD_E,OUTPUT);
	Set_Channel_Direction(LCD_RS,OUTPUT);
	Set_Channel_Direction(LCD_RW,OUTPUT);
	_delay_ms(30);
	Write_Channel(LCD_RW,LOW);
	_delay_us(50);
	LCD_Write_Cmd(0x33) ; // 8-bits mode
	LCD_Write_Cmd(0x32) ; // 4-bits mode transition
	LCD_Write_Cmd(0x28) ; // 4 Bits-Mode , 2 Lines , 5x7 Dot Activation 
	LCD_Write_Cmd(0x0C) ; // Display  on - Cursor Off (0x0F For blinking Cursor)
	LCD_Write_Cmd(0x06) ; // Increment by 1 
	LCD_Write_Cmd(0x01) ; // Clear display (needs 3 ms of delay at least)
	//_delay_ms(3);
	
}

void LCD_Write_Char(uint8 character)
{
 	uint8 nibble = character>>4; // Higher nibble of command
	 Write_Channel(LCD_RS,HIGH); // HIGH for chars
	 Write_Nibble(LCD_PORT,HIGH,nibble);
	 LCD_Latch();
	 _delay_us(60);
	 nibble = character &0x0F;
	 Write_Nibble(LCD_PORT,HIGH,nibble);
	 LCD_Latch();
	 _delay_us(60);
	
}


/*Write_Channel(LCD_RS,LOW);

uint8 PortData = Read_Port(LCD_PORT) & 0x0F;
uint8 Nibble = cmd & 0xF0;
PortData = PortData | Nibble;


Write_Port(LCD_PORT,PortData);
LCD_Latch();

PortData = PortData & 0x0F;
Nibble= cmd <<4 ;
PortData = PortData | Nibble;

Write_Port(LCD_PORT,PortData);
LCD_Latch();
_delay_us(100);*/